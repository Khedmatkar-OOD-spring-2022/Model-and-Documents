@startuml logout
hide footbox
title "تایید نوع خدمت متخصص"
actor       "متخصص" as user
participant ReactApp
participant ":RestAPI" as RestAPI
participant ":SpecialityCertificateController" as SpecialityCertificateController
participant ":SpecialityCertificateCatalogue" as SpecialityCertificateCatalogue
participant ":SpecialityCertificate" as SpecialityCertificate
participant ":ValidationState" as ValidationState
participant ":SpecialityCertificateDTO" as SpecialityCertificateDTO
database Database

note left of user
    مدیر در سامانه وارد شده باشد.
end note
note left of user
     مدیر دسترسی تایید یا رد 
     انواع خدمت متخصصان را دارا باشد.
end note

user -> ReactApp: changeCertificateState()
ReactApp -> RestAPI : http_request
RestAPI -> SpecialityCertificateController : changeCertificateState()
SpecialityCertificateController -> SpecialityCertificateCatalogue : getById()
SpecialityCertificateCatalogue -> Database : sql_query
return tuple

alt #Pink SpecialityCertificate not found

    SpecialityCertificateCatalogue --> SpecialityCertificateController : NULL
    SpecialityCertificateController --> RestAPI: exception
    RestAPI --> ReactApp : http_response

else #LightBlue SpecialityCertificate exists

    SpecialityCertificateCatalogue -> SpecialityCertificate ** : <<create>>
    SpecialityCertificateCatalogue --> SpecialityCertificateController: specialityCertificate
    SpecialityCertificateController -> ValidationState ** :<<create>>
    SpecialityCertificateController -> SpecialityCertificate: setState()
    return
    SpecialityCertificateController -> SpecialityCertificateCatalogue: save()
    SpecialityCertificateCatalogue -> Database: sql_query
    return 
    SpecialityCertificateCatalogue --> SpecialityCertificateController
    SpecialityCertificateController -> SpecialityCertificateDTO **: <<create>>
    SpecialityCertificateController --> RestAPI: certificateDTO
    RestAPI --> ReactApp : http_response
end

RestAPI --> user: message

@enduml