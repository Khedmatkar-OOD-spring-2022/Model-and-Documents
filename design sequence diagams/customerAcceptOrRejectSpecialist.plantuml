@startuml customerAcceptOrRejectSpecialist
hide footbox
title "پذیرش متخصص"
actor       "مشتری" as customer
participant ReactApp
participant ":RestAPI" as RestAPI
participant ":ServiceController" as ServiceController
participant ":ServiceCatalogue" as ServiceCatalogue
participant ":Service" as Service
participant ":Chat" as Chat
participant ":ServiceDTO" as ServiceDTO
participant ":SpecialistCatalogue" as SpecialistCatalogue
participant ":SpecialistCandidateFinderStrategy" as SpecialistCandidateFinderStrategy
participant ":Announcement" as Announcement
database Database
note left of customer
    مشتری باید در سامانه
    وارد شده باشد
end note

customer -> ReactApp: SubmitAcceptSpecialistRequest()
ReactApp -> RestAPI: http_request
RestAPI -> ServiceController: acceptSpecialist(specialistId, serviceId, isAccept)
ServiceController -> ServiceCatalogue: findById(id)
ServiceCatalogue -> Database: sql_query
return tuple
alt#Gold #Pink service not found

    ServiceCatalogue --> ServiceController: NULL
    ServiceController --> RestAPI: exception
    RestAPI --> ReactApp: http_response

else #LightBlue

    ServiceCatalogue -> Service **: <<create>>
    ServiceCatalogue --> ServiceController: service

    alt#Gold #Pink specialist isn't candidate of service || service status is not WAITING_FOR_CUSTOMER_ACCEPTANCE

        ServiceController --> RestAPI: exception
        RestAPI --> ReactApp: http_response

    else #LightBlue

        alt customer rejects specialist

            ref over ServiceController, SpecialistCandidateFinderStrategy, SpecialistCatalogue, Database: جستجو مشتری کاندید
            ServiceController -> Service: setCandidateSpecialist(candidate)
            Service -> Chat: setStatus()
            return
            Service --> ServiceController
            ServiceController -> Announcement: <<send>> Notification
            Announcement -> Announcement: notifyUser(notif)
            Announcement -->: notification
            note right of Announcement
                ایمیل جزئیات درخواست خدمت
                به مشتری کاندید جدید ارسال می‌شود
            end note

        else customer accepts specialist

            ServiceController -> Service: updateToNextState(serviceId)
            return
            ServiceController -> Announcement: <<send>> Notification
            Announcement -> Announcement: notifyUser(notif)
            Announcement -->: notification
            note right of Announcement
                ایمیل تایید درخواست خدمت توسط
                مشتری به متخصص ارسال می‌شود
            end note

        end
        ServiceController -> ServiceCatalogue: save()
        ServiceCatalogue -> Database: sql_query
        return service
        ServiceController -> ServiceDTO **: <<create>>
        ServiceController --> RestAPI: serviceDTO
        RestAPI --> ReactApp: http_response

    end

end
ReactApp --> customer: message
@enduml