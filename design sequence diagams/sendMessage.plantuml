@startuml logout
hide footbox
title "فرستادن پیام" 
actor       "کاربر" as user
participant ReactApp
participant ":RestAPI" as RestAPI
participant ":ChatController" as ChatController
participant ":ChatCatalogue" as ChatCatalogue
participant ":MessageCatalogue" as MessageCatalogue
participant ":Chat" as Chat
participant ":Message" as Message
participant ":MessageDTO" as MessageDTO
database Database
note left of user
کاربر در حساب کاربری خود
 وارد شده است
end note
note left of user
کاربر باید درخواست خدمت
 در حال اجرا داشته باشد
end note

user -> ReactApp: SubmitMessageForm()
ReactApp -> RestAPI : http_request
RestAPI -> ChatController : sendMessage(serviceId, message,context)
ChatController -> ChatCatalogue : findByServiceId(id)
ChatCatalogue -> Database : sql_query
return tuple

alt #Pink Chat not found

    ChatCatalogue --> ChatController : NULL
    ChatController --> RestAPI: exception
    RestAPI --> ReactApp : http_response

else #LightBlue Chat exists

    ChatCatalogue -> Chat ** : <<create>>
    ChatCatalogue --> ChatController: chat
    alt #Pink Chat is closed

        ChatController --> RestAPI: exception
        RestAPI --> ReactApp : http_response
        
    else #LightBlue Chat state is open
        ChatController -> Message ** :<<create>>
        ChatController -> MessageCatalogue: save(message)
        MessageCatalogue -> Database : sql_query
        return
        MessageCatalogue --> ChatController
        ChatController -> Chat: sendMessage(message)
        return 
        ChatController -> ChatCatalogue : save(chat)
        ChatCatalogue -> Database: sql_query
        return
        ChatCatalogue --> ChatController
        ChatController -> MessageDTO **: <<create>>
        ChatController --> RestAPI: messageDTO
        RestAPI --> ReactApp : http_response
    end

end

ReactApp --> user: message
@enduml